@page "/areas"

@using UCR.ECCI.PI.ThemePark.Frontend.Blazor.Application.Services
@using UCR.ECCI.PI.ThemePark.Frontend.Blazor.Presentation.Models
@using UCR.ECCI.PI.ThemePark.Frontend.Blazor.Domain.Entities.UniversityManagement
@using UCR.ECCI.PI.ThemePark.Frontend.Blazor.Presentation.Components
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor

@attribute [Authorize]
@inject IAreaServices AreasRepository
@inject NavigationManager NavigationManager
@inject IPermissionContext PermissionContext

@*
    This page displays a list of areas in the system.
    It allows users to view details of each area and navigate to add a new area if they have the necessary permissions.
*@
<CleanBreadcrumbs />
<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pa-0">
<div style="overflow-x: auto; overflow-y: auto; padding: 1rem; padding-bottom: 80px;">
        <PageTitle>Administración de Áreas</PageTitle>

    <div style="display: flex;
                    justify-content: space-between;
                    align-items: center;
                    flex-wrap: wrap;
                    gap: 1rem;
                    width: 100%;
                    margin-bottom: 1rem;">
        <h3 class="text-h1" style="margin: 0">Administración de Áreas</h3>

        <AuthorizeView Policy="Create Area">
            <Authorized>
                <CustomButton ButtonType="add"
                                Variant="Variant.Filled"
                                OnClick="@GoToAddArea">
                    AGREGAR
                </CustomButton>
            </Authorized>
        </AuthorizeView>
    </div>

    @if (isLoading)
    {
        <Spinner />
    }
    else
    {
        <div class="table-container" style="overflow-x: auto; width: 100%;">

        <MudTable T="Area"
                  Items=@areas
                  Hover="true"
                  Bordered="true"
                  Striped="true"
                  Elevation="1"
                  Dense="true"
                  RowsPerPage="10"
                  Style="width: 100%; table-layout: auto;"
                  Breakpoint="Breakpoint.None">
                <HeaderContent>
                    <MudTh><span class="text-h3 fw-bold">Área</span></MudTh>
                    <MudTh><span class="text-h3 fw-bold">Edificios</span></MudTh>
                    <MudTh><span class="text-h3 fw-bold">Sede</span></MudTh>
                    <MudTh><span class="text-h3 fw-bold">Universidad</span></MudTh>
                </HeaderContent>

                <RowTemplate>
                    <MudTd DataLabel="Área" class="text-link-blue">
                        <MudLink Href="@($"/areas/mostrar-area/{context!.Name!.Name}")">@context.Name.Name</MudLink>
                    </MudTd>
                    <MudTd DataLabel="Edificios" class="text-link-blue">
                            <MudLink Href="/edificios">Ver</MudLink>
                    </MudTd>
                    <MudTd DataLabel="Sede" class="text-body">@context.Campus!.Name!.Name</MudTd>
                    <MudTd DataLabel="Universidad" class="text-body">@context.Campus!.University!.Name!.Name</MudTd>
                </RowTemplate>

                <NoRecordsContent>
                    <MudText Class="text-h3"> No hay elementos para mostrar </MudText>
                </NoRecordsContent>
            </MudTable>
    </div>
    }
    </div>
</MudContainer>

@code {
    /// <summary>
    /// Collection of area entities to display.
    /// </summary>
    private IEnumerable<Area>? areas;
    private bool isLoading = true;

    /// <summary>
    /// Invoked when the component is initialized.
    /// Loads the list of buildings asynchronously from the repository.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        areas = await AreasRepository.ListAreaAsync();
        isLoading = false;
    }

    void GoToAddArea()
    {
        NavigationManager.NavigateTo("/areas/agregar-area");
    }
}
