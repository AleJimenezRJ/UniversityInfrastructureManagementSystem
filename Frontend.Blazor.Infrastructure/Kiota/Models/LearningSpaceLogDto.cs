// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class LearningSpaceLogDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The action property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Action { get; set; }
#nullable restore
#else
        public string Action { get; set; }
#endif
        /// <summary>The colorCeiling property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ColorCeiling { get; set; }
#nullable restore
#else
        public string ColorCeiling { get; set; }
#endif
        /// <summary>The colorFloor property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ColorFloor { get; set; }
#nullable restore
#else
        public string ColorFloor { get; set; }
#endif
        /// <summary>The colorWalls property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ColorWalls { get; set; }
#nullable restore
#else
        public string ColorWalls { get; set; }
#endif
        /// <summary>The height property</summary>
        public double? Height { get; set; }
        /// <summary>The learningSpaceLogInternalId property</summary>
        public int? LearningSpaceLogInternalId { get; set; }
        /// <summary>The length property</summary>
        public double? Length { get; set; }
        /// <summary>The maxCapacity property</summary>
        public int? MaxCapacity { get; set; }
        /// <summary>The modifiedAt property</summary>
        public DateTimeOffset? ModifiedAt { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The width property</summary>
        public double? Width { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.LearningSpaceLogDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.LearningSpaceLogDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.LearningSpaceLogDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "action", n => { Action = n.GetStringValue(); } },
                { "colorCeiling", n => { ColorCeiling = n.GetStringValue(); } },
                { "colorFloor", n => { ColorFloor = n.GetStringValue(); } },
                { "colorWalls", n => { ColorWalls = n.GetStringValue(); } },
                { "height", n => { Height = n.GetDoubleValue(); } },
                { "learningSpaceLogInternalId", n => { LearningSpaceLogInternalId = n.GetIntValue(); } },
                { "length", n => { Length = n.GetDoubleValue(); } },
                { "maxCapacity", n => { MaxCapacity = n.GetIntValue(); } },
                { "modifiedAt", n => { ModifiedAt = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "width", n => { Width = n.GetDoubleValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("action", Action);
            writer.WriteStringValue("colorCeiling", ColorCeiling);
            writer.WriteStringValue("colorFloor", ColorFloor);
            writer.WriteStringValue("colorWalls", ColorWalls);
            writer.WriteDoubleValue("height", Height);
            writer.WriteIntValue("learningSpaceLogInternalId", LearningSpaceLogInternalId);
            writer.WriteDoubleValue("length", Length);
            writer.WriteIntValue("maxCapacity", MaxCapacity);
            writer.WriteDateTimeOffsetValue("modifiedAt", ModifiedAt);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("type", Type);
            writer.WriteDoubleValue("width", Width);
        }
    }
}
#pragma warning restore CS0618
