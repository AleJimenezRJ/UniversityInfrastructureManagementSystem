// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class LearningComponentDto : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The dimensions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.DimensionsDto? Dimensions { get; set; }
#nullable restore
#else
        public global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.DimensionsDto Dimensions { get; set; }
#endif
        /// <summary>The id property</summary>
        public int? Id { get; set; }
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>The orientation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Orientation { get; set; }
#nullable restore
#else
        public string Orientation { get; set; }
#endif
        /// <summary>The position property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.PositionDto? Position { get; set; }
#nullable restore
#else
        public global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.PositionDto Position { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.LearningComponentDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.LearningComponentDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#namespace.ProjectorDto" => new global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.ProjectorDto(),
                "#namespace.WhiteboardDto" => new global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.WhiteboardDto(),
                _ => new global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.LearningComponentDto(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dimensions", n => { Dimensions = n.GetObjectValue<global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.DimensionsDto>(global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.DimensionsDto.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetIntValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "orientation", n => { Orientation = n.GetStringValue(); } },
                { "position", n => { Position = n.GetObjectValue<global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.PositionDto>(global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.PositionDto.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.DimensionsDto>("dimensions", Dimensions);
            writer.WriteIntValue("id", Id);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteStringValue("orientation", Orientation);
            writer.WriteObjectValue<global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.Models.PositionDto>("position", Position);
        }
    }
}
#pragma warning restore CS0618
