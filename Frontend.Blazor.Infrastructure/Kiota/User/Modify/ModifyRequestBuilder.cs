// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
using UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.Item;
namespace UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify
{
    /// <summary>
    /// Builds and executes requests for operations under \user\modify
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ModifyRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Gets an item from the UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.user.modify.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.Item.ModifyItemRequestBuilder"/></returns>
        public global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.Item.ModifyItemRequestBuilder this[int position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("id", position);
                return new global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.Item.ModifyItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>Gets an item from the UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.user.modify.item collection</summary>
        /// <param name="position">Unique identifier of the item</param>
        /// <returns>A <see cref="global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.Item.ModifyItemRequestBuilder"/></returns>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.Item.ModifyItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("id", position);
                return new global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.Item.ModifyItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.ModifyRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ModifyRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/user/modify", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::UCR.ECCI.PI.ThemePark.Frontend.Blazor.Infrastructure.Kiota.User.Modify.ModifyRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ModifyRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/user/modify", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
